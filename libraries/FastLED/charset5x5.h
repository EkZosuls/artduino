
	// Letters A - Z
	{0x7c,0x44,0x44,0x7c,0x44},	// [ 0] = A
	{0x7c,0x44,0x78,0x44,0x7c},	// [ 1] = B
	{0x7c,0x40,0x40,0x40,0x7c},	// [ 2] = C
	{0x78,0x44,0x44,0x44,0x78},	// [ 3] = D
	{0x7c,0x40,0x78,0x40,0x7c},	// [ 4] = E
	{0x7c,0x40,0x70,0x40,0x40},	// [ 5] = F
	{0x7c,0x40,0x4c,0x44,0x7c},	// [ 6] = G
	{0x44,0x44,0x7c,0x44,0x44},	// [ 7] = H
	{0x7c,0x10,0x10,0x10,0x7c},	// [ 8] = I
	{0x0c,0x04,0x04,0x44,0x7c},	// [ 9] = J
	{0x44,0x48,0x70,0x48,0x44},	// [10] = K
	{0x40,0x40,0x40,0x40,0x7c},	// [11] = L
	{0x44,0x6c,0x54,0x44,0x44},	// [12] = M
	{0x44,0x64,0x54,0x4c,0x44},	// [13] = N
	{0x38,0x44,0x44,0x44,0x38},	// [14] = O
	{0x78,0x44,0x78,0x40,0x40},	// [15] = P
	{0x7c,0x44,0x44,0x7c,0x10},	// [16] = Q
	{0x78,0x44,0x78,0x44,0x44},	// [17] = R
	{0x7c,0x40,0x7c,0x04,0x7c},	// [18] = S
	{0x7c,0x10,0x10,0x10,0x10},	// [19] = T
	{0x44,0x44,0x44,0x44,0x7c},	// [20] = U
	{0x44,0x44,0x28,0x28,0x10},	// [21] = V
	{0x44,0x44,0x54,0x54,0x28},	// [22] = W
	{0x44,0x28,0x10,0x28,0x44},	// [23] = X
	{0x44,0x44,0x28,0x10,0x10},	// [24] = Y
	{0x7c,0x08,0x10,0x20,0x7c},	// [25] = Z
	// Numbers 0 - 9
	{0x7c,0x4c,0x54,0x64,0x7c},	// [26] = 0
	{0x10,0x30,0x10,0x10,0x38},	// [27] = 1
	{0x78,0x04,0x38,0x40,0x7c},	// [28] = 2
	{0x7c,0x04,0x38,0x04,0x7c},	// [29] = 3
	{0x40,0x40,0x50,0x7c,0x10},	// [30] = 4
	{0x7c,0x40,0x78,0x04,0x78},	// [31] = 5
	{0x7c,0x40,0x7c,0x44,0x7c},	// [32] = 6
	{0x7c,0x04,0x08,0x10,0x10},	// [33] = 7
	{0x7c,0x44,0x7c,0x44,0x7c},	// [34] = 8
	{0x7c,0x44,0x7c,0x04,0x7c},	// [35] = 9
	// What we display when the character passed in is unknown
	{0x80,0x00,0x80,0x12,0x0c}	// [36] = ¿
	{0x20,0x00,0x20,0x48,0x30}	// [36] = ¿
	};

class CCharset5x5 {
public:
	CCharset5x5(char * message){
		int length = strlen(message);
		m_glyphIndices = new char[length];
		for (int i = 0; i < length; i++){
			char cur = message[i];
			if (cur >= 'A' && cur <= 'Z'){
				m_glyphIndices[i] = cur - 'A';
			} else if (cur >= 'a' && cur <= 'a'){
				m_glyphIndices[i] = cur - 'a';
			} else if (cur >= '0' && cur <= '9'){
				m_glyphIndices[i] = (cur - '0') + 26;
			} else {
				m_glyphIndices[i] = 36;
			}
		}
	}
	
	// strcpy_P(buffer, (char*)pgm_read_word(&(string_table[i]))); // Necessary casts and dereferencing, just copy. 
private:
	char *m_glyphIndices;
};